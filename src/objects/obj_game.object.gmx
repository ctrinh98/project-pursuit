<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1515752192</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//InitGame();
global.pause = 0;
global.door_opened = false;
global.transition_black = false;
global.money = 000;
global.save_prompt = false;
global.battery = 75;
global.battery_max = 100;
image_speed = 0.05;
//global.bgm = bgm_gestation;
t_b = 0;
draw_set_color(c_white);
global.gameover = false;
global.gamescore = 0;
global.gametimem = 0;
global.gametimes = 0;
global.gametimems = 0;

//Warp variables
obj_player.player_x = obj_player.xstart;
obj_player.player_y = obj_player.ystart;

//Prevent dialogue box overlap
global.talking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battery life drain and gameover
if (global.battery &gt; 0) {
    t_b += 1;
    global.gametimems += 1;
    if (t_b &gt;= 60) {
        global.battery -= 1;
        global.gametimes += 1;
        global.gametimems = 0;
        if (global.gametimes == 60) {
            global.gametimem += 1;
            global.gametimes = 0; 
        }
        t_b = 0;
    }
} else if (global.battery == 0) {
    if (global.gameover == false) {
        global.pause = 1;
        audio_play_sound(snd_player_death,5,false);
        instance_create(view_xview, view_yview,obj_gameover_start);
        global.gameover = true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
obj_player.player_x = obj_player.xstart;
obj_player.player_y = obj_player.ystart;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw global HUD

/*

if (object_exists(obj_player)) {

    if (global.pause == 0) {
    
        if (global.damage_flash == 0) {
            draw_sprite_ext(spr_health_bar,0,view_xview + 40,view_yview + 44,1,1,0,c_white,0);
            draw_sprite_ext(spr_health_color,0,view_xview + 40,view_yview + 44,global.player_hp/global.player_max_hp,1,0,c_white,0);
            draw_sprite_ext(spr_battery_color,0,view_xview + 40,view_yview + 52,global.battery/global.battery_max,1,0,c_white,0);
        } else {
            if (obj_player.SelectedWeaponIndex == 0 &amp;&amp; obj_player.WeaponCount &gt; 0) {
                draw_sprite(spr_bar_gun,0,view_xview + 40,view_yview + 44);
            } else if (obj_player.SelectedWeaponIndex == 1 &amp;&amp; obj_player.WeaponCount &gt; 1) {
                draw_sprite(spr_bar_machine,0,view_xview + 40,view_yview + 44);
            }
            draw_sprite(spr_health_bar,0,view_xview + 40,view_yview + 44);
            draw_sprite_ext(spr_health_color,0,view_xview + 40,view_yview + 44,global.player_hp/global.player_max_hp,1,0,c_white,1);
            draw_sprite_ext(spr_battery_color,0,view_xview + 40,view_yview + 52,global.battery/global.battery_max,1,0,c_white,1);
            draw_set_font(global.font_hud);
            if (global.player_hp &gt; 9) {
                draw_text(view_xview + 28,view_yview + 46, global.player_hp);
            } else {
                draw_text(view_xview + 28,view_yview + 46, global.player_hp);
            }
            //draw_set_font(global.font_number);
            if (global.battery &gt; 99) {
                draw_text(view_xview + 32,view_yview + 54, global.battery);
            } else if (global.battery &gt; 9) {
    //            draw_text(view_xview + 32,view_yview + 54, 0);
                draw_text(view_xview + 28,view_yview + 54, global.battery);
            } else {
    //            draw_text(view_xview + 32,view_yview + 54, 0);
                draw_text(view_xview + 28,view_yview + 54, 0);
                draw_text(view_xview + 36,view_yview + 54, global.battery);
            }
        }    
    }

}

*/

if (object_exists(obj_player)) {

if (global.pause == 0) {

    if (global.damage_flash == 0) {
        draw_sprite_ext(spr_health_bar,0,view_xview + 40,view_yview + 44,1,1,0,c_white,0);
        draw_sprite_ext(spr_health_color,0,view_xview + 40,view_yview + 44,global.player_hp/global.player_max_hp,1,0,c_white,0);
        draw_sprite_ext(spr_battery_color,0,view_xview + 40,view_yview + 52,global.battery/global.battery_max,1,0,c_white,0);
    } else {
        if (obj_player.SelectedWeaponIndex == 0 &amp;&amp; obj_player.WeaponCount &gt; 0) {
            draw_sprite(spr_bar_gun,0,view_xview + 40,view_yview + 44);
        } else if (obj_player.SelectedWeaponIndex == 1 &amp;&amp; obj_player.WeaponCount &gt; 1) {
            draw_sprite(spr_bar_machine,0,view_xview + 40,view_yview + 44);
        }
        draw_sprite(spr_health_bar,0,view_xview + 40,view_yview + 44);
        draw_sprite_ext(spr_health_color,0,view_xview + 40,view_yview + 44,global.player_hp/global.player_max_hp,1,0,c_white,1);
        draw_sprite_ext(spr_battery_color,0,view_xview + 40,view_yview + 52,global.battery/global.battery_max,1,0,c_white,1);
        draw_set_font(global.font_hud);
        if (global.player_hp &gt; 9) {
            draw_text(view_xview + 36,view_yview + 46, global.player_hp);
        } else {
            draw_text(view_xview + 40,view_yview + 46, global.player_hp);
        }
        //draw_set_font(global.font_number);
        if (global.battery &gt; 99) {
            draw_text(view_xview + 40,view_yview + 54, global.battery);
        } else if (global.battery &gt; 9) {
//            draw_text(view_xview + 32,view_yview + 54, 0);
            draw_text(view_xview + 36,view_yview + 54, global.battery);
        } else {
//            draw_text(view_xview + 32,view_yview + 54, 0);
            draw_text(view_xview + 32,view_yview + 54, 0);
            draw_text(view_xview + 40,view_yview + 54, global.battery);
        }
    }    
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bullet counter and time/score
/*
if (object_exists(obj_player)) {

    if (global.pause == 0) {
    
        if (obj_player.SelectedWeaponIndex = 1 &amp;&amp; obj_player.WeaponCount &gt; 1) {
            draw_set_font(global.font_number);
            if (obj_player.CurrentShots &lt; 10) {
                draw_text(view_xview + 76,view_yview + 20,obj_player.CurrentShots);
            } else if (obj_player.CurrentShots &lt; 100) {
                draw_text(view_xview + 70,view_yview + 20,obj_player.CurrentShots);
            } else if (obj_player.CurrentShots == 100) {
                draw_text(view_xview + 64,view_yview + 20,obj_player.CurrentShots);
            }
            draw_text(view_xview + 64,view_yview + 30,obj_player.TotalShots);
        }
    
    }

}
*/

if (object_exists(obj_player)) {

///Bullet counter

if (global.pause == 0) {

    if (obj_player.SelectedWeaponIndex = 1 &amp;&amp; obj_player.WeaponCount &gt; 1) {
        draw_set_font(global.font_number);
        if (obj_player.CurrentShots &lt; 10) {
            draw_text(view_xview + 80,view_yview + 20,obj_player.CurrentShots);
        } else {
            draw_text(view_xview + 76,view_yview + 20,obj_player.CurrentShots);
        }
        draw_text(view_xview + 76,view_yview + 30,obj_player.TotalShots);
    }
    
    draw_set_font(global.font_number);
    draw_text(view_xview + 250, view_yview + 20, global.gametimem);
    draw_text(view_xview + 275, view_yview + 20, global.gametimes);
    draw_text(view_xview + 300, view_yview + 20, global.gametimems);
    draw_text(view_xview + 270, view_yview + 30, global.gamescore);

}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drowning code

if (object_exists(obj_player)) {

    with (obj_player) {
    
        if (place_meeting(x,y,obj_water)) { 
        
            draw_set_font(global.font_number);
            air_shield = draw_text(view_xview + 127,view_yview + 120,"!");
            air_text_a = draw_text(view_xview + 140,view_yview + 120,"A");
            air_text_i = draw_text(view_xview + 144,view_yview + 120,"I");
            air_text_r = draw_text(view_xview + 151,view_yview + 120,"R");
            obj_player.t_shield_timer += 1;
            obj_player.t_air_timer += 1;
            if (obj_player.t_air &gt; 99) {
                air_counter = draw_text(view_xview + 174,view_yview + 120,t_air);
            } else {
                air_counter = draw_text(view_xview + 178,view_yview + 120,t_air);
            }
        
            if (obj_player.t_air == 0) {
                game_restart();
            } else {           
                if (obj_player.t_air_timer &gt;= 10) {
                    obj_player.t_air -= 1;
                    obj_player.t_air_timer = 0;
                }
                if (obj_player.t_shield_timer &gt;= 20) {
                    air_shield = draw_text(127,120,"");
                    obj_player.t_shield_timer = 0;
                }
            }
        } else {
            air_text = draw_text(130,60,"");
            air_counter = draw_text(160,60,"");
            obj_player.t_air = 100;
        }
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Static screen effect
//-1515752192

if (global.gameover) {
    draw_sprite_ext(spr_static, -1, view_xview, view_yview, 1, 1, 0, c_white, 0.00);
    image_speed = 0.0;
    audio_sound_gain(global.static, 0.0, 0);
} else if (global.battery &lt; 1) {
    draw_sprite_ext(spr_static, -1, view_xview, view_yview, 1, 1, 0, c_white, 0.00);
    image_speed = 0.3;
    audio_sound_gain(global.static, 0, 0);
} else if (global.battery &lt; 10) {
    draw_sprite_ext(spr_static, -1, view_xview, view_yview, 1, 1, 0, c_white, 0.20);
    image_speed = 0.3;
    audio_sound_gain(global.static, 0.6, 0);
} else if (global.battery &lt; 25) {
    draw_sprite_ext(spr_static, -1, view_xview, view_yview, 1, 1, 0, c_white, 0.15);
    image_speed = 0.3;
    audio_sound_gain(global.static, 0.4, 0);
} else if (global.battery &lt; 50) {
    draw_sprite_ext(spr_static, -1, view_xview, view_yview, 1, 1, 0, c_white, 0.10);
    image_speed = 0.3;
    audio_sound_gain(global.static, 0.2, 0);
} else if (global.battery &lt; 75) {
    draw_sprite_ext(spr_static, -1, view_xview, view_yview, 1, 1, 0, c_white, 0.05);
    image_speed = 0.3;
    audio_sound_gain(global.static, 0.1, 0);
//    audio_sound_gain(global.static, 1, 1000);
} else {
    draw_sprite_ext(spr_static, -1, view_xview, view_yview, 1, 1, 0, c_white, 0.00);
    image_speed = 0.0;
    audio_sound_gain(global.static, 0.0, 0);
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
